"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class Trie {
    constructor() {
        this.next = {};
        this.is_word = null;
        this.value = null;
        this.data = [];
    }
    //fail?: Trie = null;
    add(word, data, original_word) {
        let chr, node;
        chr = word.charAt(0);
        node = this.next[chr];
        if (!node) {
            node = this.next[chr] = new Trie();
            if (original_word) {
                node.value = original_word.substr(0, original_word.length - word.length + 1);
            }
            else {
                node.value = chr;
            }
        }
        if (word.length > 1) {
            return node.add(word.substring(1), data, original_word || word);
        }
        else {
            node.data.push(data);
            return node.is_word = true;
        }
    }
    explore_fail_link(word) {
        let chr, i, node, _i, _ref;
        node = this;
        for (i = _i = 0, _ref = word.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
            chr = word.charAt(i);
            node = node.next[chr];
            if (!node) {
                return null;
            }
        }
        return node;
    }
    each_node(callback) {
        let node, _k, _ref, _ref1;
        _ref = this.next;
        for (_k in _ref) {
            node = _ref[_k];
            callback(this, node);
        }
        _ref1 = this.next;
        for (_k in _ref1) {
            node = _ref1[_k];
            node.each_node(callback);
        }
        return this;
    }
}
exports.Trie = Trie;
exports.default = Trie;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJpZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInRyaWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFhLElBQUk7SUFBakI7UUFFQyxTQUFJLEdBRUEsRUFBRSxDQUFDO1FBQ1AsWUFBTyxHQUFZLElBQUksQ0FBQztRQUN4QixVQUFLLEdBQVcsSUFBSSxDQUFDO1FBQ3JCLFNBQUksR0FBUSxFQUFFLENBQUM7SUFpRWhCLENBQUM7SUEvREEscUJBQXFCO0lBRXJCLEdBQUcsQ0FBQyxJQUFZLEVBQUUsSUFBUSxFQUFFLGFBQXNCO1FBRWpELElBQUksR0FBVyxFQUFFLElBQVUsQ0FBQztRQUM1QixHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNyQixJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN0QixJQUFJLENBQUMsSUFBSSxFQUNUO1lBQ0MsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQztZQUNuQyxJQUFJLGFBQWEsRUFDakI7Z0JBQ0MsSUFBSSxDQUFDLEtBQUssR0FBRyxhQUFhLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxhQUFhLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7YUFDN0U7aUJBRUQ7Z0JBQ0MsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUM7YUFDakI7U0FDRDtRQUNELElBQUksSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQ25CO1lBQ0MsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxFQUFFLGFBQWEsSUFBSSxJQUFJLENBQUMsQ0FBQztTQUNoRTthQUVEO1lBQ0MsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDckIsT0FBTyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztTQUMzQjtJQUNGLENBQUM7SUFFRCxpQkFBaUIsQ0FBQyxJQUFZO1FBRTdCLElBQUksR0FBRyxFQUFFLENBQUMsRUFBRSxJQUFhLEVBQUUsRUFBRSxFQUFFLElBQUksQ0FBQztRQUNwQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ1osS0FBSyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFBRSxJQUFJLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLEdBQUcsSUFBSSxFQUFFLENBQUMsR0FBRyxDQUFDLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQ25HO1lBQ0MsR0FBRyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDckIsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDdEIsSUFBSSxDQUFDLElBQUksRUFDVDtnQkFDQyxPQUFPLElBQUksQ0FBQzthQUNaO1NBQ0Q7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNiLENBQUM7SUFFRCxTQUFTLENBQUMsUUFBNkM7UUFFdEQsSUFBSSxJQUFJLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxLQUFLLENBQUM7UUFDMUIsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDakIsS0FBSyxFQUFFLElBQUksSUFBSSxFQUNmO1lBQ0MsSUFBSSxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUNoQixRQUFRLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1NBQ3JCO1FBQ0QsS0FBSyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDbEIsS0FBSyxFQUFFLElBQUksS0FBSyxFQUNoQjtZQUNDLElBQUksR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDakIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUN6QjtRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztDQUNEO0FBeEVELG9CQXdFQztBQUVELGtCQUFlLElBQUksQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBUcmllPFQgPSBhbnk+XG57XG5cdG5leHQ6IHtcblx0XHRbazogc3RyaW5nXTogVHJpZTxUPlxuXHR9ID0ge307XG5cdGlzX3dvcmQ6IGJvb2xlYW4gPSBudWxsO1xuXHR2YWx1ZTogc3RyaW5nID0gbnVsbDtcblx0ZGF0YTogVFtdID0gW107XG5cblx0Ly9mYWlsPzogVHJpZSA9IG51bGw7XG5cblx0YWRkKHdvcmQ6IHN0cmluZywgZGF0YT86IFQsIG9yaWdpbmFsX3dvcmQ/OiBzdHJpbmcpOiBib29sZWFuXG5cdHtcblx0XHRsZXQgY2hyOiBzdHJpbmcsIG5vZGU6IFRyaWU7XG5cdFx0Y2hyID0gd29yZC5jaGFyQXQoMCk7XG5cdFx0bm9kZSA9IHRoaXMubmV4dFtjaHJdO1xuXHRcdGlmICghbm9kZSlcblx0XHR7XG5cdFx0XHRub2RlID0gdGhpcy5uZXh0W2Nocl0gPSBuZXcgVHJpZSgpO1xuXHRcdFx0aWYgKG9yaWdpbmFsX3dvcmQpXG5cdFx0XHR7XG5cdFx0XHRcdG5vZGUudmFsdWUgPSBvcmlnaW5hbF93b3JkLnN1YnN0cigwLCBvcmlnaW5hbF93b3JkLmxlbmd0aCAtIHdvcmQubGVuZ3RoICsgMSk7XG5cdFx0XHR9XG5cdFx0XHRlbHNlXG5cdFx0XHR7XG5cdFx0XHRcdG5vZGUudmFsdWUgPSBjaHI7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGlmICh3b3JkLmxlbmd0aCA+IDEpXG5cdFx0e1xuXHRcdFx0cmV0dXJuIG5vZGUuYWRkKHdvcmQuc3Vic3RyaW5nKDEpLCBkYXRhLCBvcmlnaW5hbF93b3JkIHx8IHdvcmQpO1xuXHRcdH1cblx0XHRlbHNlXG5cdFx0e1xuXHRcdFx0bm9kZS5kYXRhLnB1c2goZGF0YSk7XG5cdFx0XHRyZXR1cm4gbm9kZS5pc193b3JkID0gdHJ1ZTtcblx0XHR9XG5cdH1cblxuXHRleHBsb3JlX2ZhaWxfbGluayh3b3JkOiBzdHJpbmcpXG5cdHtcblx0XHRsZXQgY2hyLCBpLCBub2RlOiBUcmllPFQ+LCBfaSwgX3JlZjtcblx0XHRub2RlID0gdGhpcztcblx0XHRmb3IgKGkgPSBfaSA9IDAsIF9yZWYgPSB3b3JkLmxlbmd0aDsgMCA8PSBfcmVmID8gX2kgPCBfcmVmIDogX2kgPiBfcmVmOyBpID0gMCA8PSBfcmVmID8gKytfaSA6IC0tX2kpXG5cdFx0e1xuXHRcdFx0Y2hyID0gd29yZC5jaGFyQXQoaSk7XG5cdFx0XHRub2RlID0gbm9kZS5uZXh0W2Nocl07XG5cdFx0XHRpZiAoIW5vZGUpXG5cdFx0XHR7XG5cdFx0XHRcdHJldHVybiBudWxsO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gbm9kZTtcblx0fVxuXG5cdGVhY2hfbm9kZShjYWxsYmFjazogKHRyaWU6IHRoaXMsIG5vZGU6IFRyaWU8VD4pID0+IHZvaWQpXG5cdHtcblx0XHRsZXQgbm9kZSwgX2ssIF9yZWYsIF9yZWYxO1xuXHRcdF9yZWYgPSB0aGlzLm5leHQ7XG5cdFx0Zm9yIChfayBpbiBfcmVmKVxuXHRcdHtcblx0XHRcdG5vZGUgPSBfcmVmW19rXTtcblx0XHRcdGNhbGxiYWNrKHRoaXMsIG5vZGUpO1xuXHRcdH1cblx0XHRfcmVmMSA9IHRoaXMubmV4dDtcblx0XHRmb3IgKF9rIGluIF9yZWYxKVxuXHRcdHtcblx0XHRcdG5vZGUgPSBfcmVmMVtfa107XG5cdFx0XHRub2RlLmVhY2hfbm9kZShjYWxsYmFjayk7XG5cdFx0fVxuXHRcdHJldHVybiB0aGlzO1xuXHR9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRyaWVcbiJdfQ==