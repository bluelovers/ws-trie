{"version":3,"file":"utils.js","sourceRoot":"","sources":["utils.ts"],"names":[],"mappings":";;AAAA,2CAAiC;AACjC,qCAA4C;AAG/B,QAAA,GAAG,GAAG,MAAM,CAAC;AACb,QAAA,OAAO,GAAG,QAAQ,CAAC;AAEhC,SAAgB,QAAQ,CAAC,IAAY,EAAE,GAAG,GAAG,QAAQ;IAEpD,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,EAAE,EAC3C;QACC,MAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,OAAO,IAAI,CAAC,CAAC,CAAC;KAClC;IAED,aAAa;IACb,OAAO,IAAI,CAAA;AACZ,CAAC;AATD,4BASC;AAMD,SAAgB,KAAK,CAAC,GAAW,EAAE,UAAyB,EAAE;IAE7D,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;IAExB,IAAI,OAAO,CAAC,WAAW,EACvB;QACC,GAAG,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;KACxB;IAED,IAAI,GAAG,GAAG,oBAAO,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IAEjC,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC;IAEnB,OAAO,CAAC,GAAG,CAAC,EACZ;QACC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACd,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QAEjB,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,EACxC;YACC,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YAE9B,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;SACvB;QAED,CAAC,GAAG,CAAC,CAAC;KACN;IAED,OAAO,GAAG,CAAC;AACZ,CAAC;AA7BD,sBA6BC;AAED,SAAgB,UAAU,CAAC,GAAI;IAE9B,IAAI,OAAO,GAAG,KAAK,WAAW,EAC9B;QACC,OAAO,EAAE,CAAC;KACV;IACD,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;AACxC,CAAC;AAPD,gCAOC;AAED,SAAgB,SAAS,CAAC,GAAI,EAAE,SAA0B,CAAC;IAE1D,IAAI,OAAO,GAAG,KAAK,WAAW,EAC9B;QACC,OAAO,EAAE,CAAC;KACV;IACD,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;AAC1C,CAAC;AAPD,8BAOC;AAED,SAAgB,QAAQ,CAAC,QAAQ,EAAE,QAAQ;IAE1C,OAAO,YAAY,QAAQ,cAAc,QAAQ,EAAE,CAAC;AACrD,CAAC;AAHD,4BAGC;AAED,SAAgB,UAAU,CAAI,KAAe,EAAE,GAAW,EAAE,IAAc;IAEzE,OAAO,GAAG,KAAK,iBAAQ,CAAC;AACzB,CAAC;AAHD,gCAGC;AAED,SAAgB,WAAW,CAAI,IAAc;IAE5C,OAAO,iBAAQ,IAAI,IAAI,CAAC;AACzB,CAAC;AAHD,kCAGC;AAED,SAAgB,OAAO,CAAC,CAAS;IAEhC,OAAO,CAAC,CAAC,OAAO,CAAC,2BAA2B,EAAE,EAAE,CAAC,CAAC;AACnD,CAAC;AAHD,0BAGC;AAED,SAAgB,YAAY,CAAC,CAAS;IAErC,OAAO,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;AACtC,CAAC;AAHD,oCAGC;AAED,SAAgB,UAAU,CAAC,CAAS;IAEnC,OAAO,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;AACtC,CAAC;AAHD,gCAGC;AAED,kBAAe,OAAmC,CAAC","sourcesContent":["import UString from 'uni-string';\nimport config, { END_WORD } from './config';\nimport { ITrie, ITrieNode } from './create';\n\nexport const ZWJ = 0x200d;\nexport const ZWJ_STR = '\\u200d';\n\nexport function isString(word: string, msg = 'string'): word is string\n{\n\tif (typeof word !== 'string' || word === '')\n\t{\n\t\tthrow(throwMsg(msg, typeof word));\n\t}\n\n\t// @ts-ignore\n\treturn word\n}\n\nexport type ISplitOptions = {\n\ttoLowerCase?: boolean,\n}\n\nexport function split(str: string, options: ISplitOptions = {}): string[]\n{\n\toptions = options || {};\n\n\tif (options.toLowerCase)\n\t{\n\t\tstr = str.toLowerCase();\n\t}\n\n\tlet arr = UString.split(str, '');\n\n\tlet i = arr.length;\n\n\twhile (i > 0)\n\t{\n\t\tlet j = i - 1;\n\t\tlet cur = arr[j];\n\n\t\tif (cur.length > 2 && /\\u200d/.test(cur))\n\t\t{\n\t\t\tlet a = cur.split(/(\\u200d)/);\n\n\t\t\tarr.splice(j, 1, ...a);\n\t\t}\n\n\t\ti = j;\n\t}\n\n\treturn arr;\n}\n\nexport function objectCopy(obj?)\n{\n\tif (typeof obj === 'undefined')\n\t{\n\t\treturn {};\n\t}\n\treturn JSON.parse(JSON.stringify(obj));\n}\n\nexport function stringify(obj?, spacer: number | string = 2)\n{\n\tif (typeof obj === 'undefined')\n\t{\n\t\treturn '';\n\t}\n\treturn JSON.stringify(obj, null, spacer);\n}\n\nexport function throwMsg(expected, received)\n{\n\treturn `Expected ${expected}, received ${received}`;\n}\n\nexport function isEndpoint<T>(value: ITrie<T>, key: string, trie: ITrie<T>): value is ITrieNode<T>\n{\n\treturn key === END_WORD;\n}\n\nexport function hasEndpoint<T>(node: ITrie<T>): node is ITrieNode<T>\n{\n\treturn END_WORD in node;\n}\n\nexport function zwjTrim(s: string)\n{\n\treturn s.replace(/^[\\u200d\\s]+|[\\u200d\\s]+$/, '');\n}\n\nexport function zwjTrimStart(s: string)\n{\n\treturn s.replace(/^[\\u200d\\s]+/, '');\n}\n\nexport function zwjTrimEnd(s: string)\n{\n\treturn s.replace(/[\\u200d\\s]+$/, '');\n}\n\nexport default exports as typeof import('./utils');\n"]}